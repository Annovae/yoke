require "yoke/alias"

module Yoke
  class Base
    FILENAME = ".yoke"

    class << self
      def list
        list = Yoke::Alias.list
        if list.count > 0
          puts "--- list aliases"
          longest_word_count = list.keys.group_by(&:size).max.last.last.size
          list.each do |alias_link, path|
            printf "--- %-#{longest_word_count}s %s\n", alias_link, path
          end
        else
          puts "--- no aliases set"
        end
      end

      def alias_file_path
        File.join(Dir.home, FILENAME)
      end

      def has_alias_file?
        File.exists?(alias_file_path)
      end

      def create_alias_file
        unless has_alias_file?
          puts "--- Generate #{FILENAME} file"
          File.open(alias_file_path, "w") { |f| f.write(empty_file_contents) }
        end
      end

      def empty_file_contents
        <<TEXT
# File generated by Yoke (http://fousa.be/apps/yoke).
# 
# Do not alter this file or yoke will stop working correctly.
#
TEXT
      end
    end
  end
end